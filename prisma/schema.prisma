generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum VoteType {
  UPVOTE
  DOWNVOTE
}

model User {
  id                    String   @id @default(uuid())
  username              String   @unique
  email                 String   @unique
  faculty               String
  major                 String
  password              String
  passwordResetToken    String?
  passwordResetExpires  DateTime?
  uploadedModules       Module[]
  votes                 ModuleVoteRecord[]
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

model ModuleVoteRecord {
  id       String   @id @default(uuid())
  voteType VoteType
  userId   String
  moduleId String

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  module   Module   @relation(fields: [moduleId], references: [id], onDelete: Cascade)

  @@unique([userId, moduleId])
}

model Module {
  id                String   @id @default(uuid())
  title             String
  description       String
  upvoteCount       Int      @default(0)
  downvoteCount     Int      @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  userId            String?
  votes             ModuleVoteRecord[]

  User              User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Lecturer {
  id         String   @id @default(uuid()) 
  name       String
  faculty    String
  department String
  upvotes    Int      @default(0)
  downvotes  Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

